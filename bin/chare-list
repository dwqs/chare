#!/usr/bin/env node

let chalk = require('chalk');
let ora = require('ora');
let axios = require('axios');
let program = require('commander');

let log = require('../src/log');

/**
 * Help.
 */

program.on('--help', function () {
    log.tips('  Examples:');
    log.tips();
    log.tips(chalk.gray('    # list all available official templates from github.com/waka-templates'));
    log.tips('    $ chare list');
    log.tips();
});

if(process.argv[2]){
    program.help();
}

/**
 * Padding
 */
log.tips();

let spinner = ora({
    text: "fetching templates list...",
    color:"blue"
}).start();

process.on('exit', () => log.tips());

/**
 * List repos.
 */

axios({
    url:  'https://api.github.com/users/waka-templates/repos',
    method: 'get',
    headers: {
        'User-Agent': 'chare-cli'
    }
}).then((res) => {
    if (Array.isArray(res.data)) {
        spinner.text = chalk.green('Available official templates:');
        spinner.succeed();

        log.tips();
        res.data.forEach(function (repo) {
            log.tips(
                '  ' + chalk.yellow('*') +
                '  ' + chalk.blue(repo.name) +
                ' - ' + repo.description);
        });
    } else {
        spinner.text = chalk.white('chare cli:fetching templates list failed, error message as follows:');
        spinner.fail();

        log.tips();
        log.error(`     ${res.statusText}`);
    }
}).catch((err) => {
    let res = err.response;
    if(err){
        spinner.text = chalk.white('chare cli:fetching templates list failed, error message as follows:');
        spinner.fail();
        log.tips();

        if(res.status === 403){
            //api rate limit:https://developer.github.com/v3/#rate-limiting
            log.tips(chalk.red(`     ${res.statusText}: ${res.data.message}\n\ndocumentation: ${res.data.documentation_url}`));
            log.tips();
            log.tips(`Please set auth token to get a higher rate limit by ${chalk.blue('chare token')}. Check out the documentation for more details`);
            log.tips();
            log.tips('documentation: https://developer.github.com/v3/auth/#basic-authentication')
            process.exit(1);
        } else {
            log.error(`     ${res.statusText}: ${res.data.message}`);
        }
    }
});


