#!/usr/bin/env node

let chalk = require('chalk');
let ora = require('ora');
let request = require('request');
let program = require('commander');

let log = require('../src/log');

/**
 * Help.
 */

program.on('--help', function () {
    log.tips('  Examples:');
    log.tips();
    log.tips(chalk.gray('    # list all available official templates from github.com/waka-templates'));
    log.tips('    $ chare list');
    log.tips();
});

if(process.argv[2]){
    program.help();
}

/**
 * Padding
 */
log.tips();

let spinner = ora({
    text: "fetching templates list...",
    color:"blue"
}).start();

process.on('exit', function () {
    log.tips();
});

/**
 * List repos.
 */

request({
    url: 'https://api.github.com/users/waka-templates/repos',
    headers: {
        'User-Agent': 'chare-cli'
    },
    auth:{
        'user': 'dwqs',
        'pass': '3385ea6539aaf3f4c5bb429e55640e1b75a12f99'
    }
}, (err, res, body) => {
    if(err){
        spinner.text = chalk.red('chare cli:fetching templates list failed.');
        spinner.fail();
        process.exit(1);
    }
    let requestBody = JSON.parse(body);
    if (Array.isArray(requestBody)) {
        spinner.text = chalk.green('Available official templates:');
        spinner.succeed();

        log.tips();
        requestBody.forEach(function (repo) {
            log.tips(
                '  ' + chalk.yellow('*') +
                '  ' + chalk.blue(repo.name) +
                ' - ' + repo.description);
        });
    } else {
        spinner.text = chalk.white('chare cli:fetching templates list failed, error message as follows:');
        spinner.fail();

        log.tips();
        log.error(requestBody.message);
    }
});


